[
  {
    "title": "Semiotics: the Study of Meaning-Making",
    "date": {
      "month": "December",
      "day": "28",
      "year": 2016
    },
    "article": [
      "My neighborhood must have had influential Catholics on the school board because Barrington High School had first and second-year Latin as an elective. Ms. Benham refused to concede that Latin was mortua and like acolytes or Brian in Monty Python’s Life of Brian, we would haltingly attempt to guess and then conjugate the accusative, imperative, dative or nominative (or whatever!) And like Brian’s Centurion interrogator, unless the formulation is perfectly correct, the words make no sense - instead of the graffiti throw-down 'Romans, Go Home!', the Roman soldier translates :",
      ["\"People called Romanes, they go to the house?\""],
      "Now that I’ve spent considerable time under the surface of coding watching online code-alongs and YouTube tutorials, listening to applicable podcasts and hearing the jargon in Meetup presentations, I have become slightly less intimidated by code’s foreboding, unforgiving, foreign cast and its evasive logic. But I continue to wonder if coding languages are like Latin, or other dead languages, and with no shared dialogue – the back & forth of communication – if they contain no real kernel of 'language'.",
      "Here is an example of modern English: 'totes' is a sensible hipster answer to 'you interested in seeing the new Star Wars?'' But its dialect would stump Siri, because the meaning lies within the context, and inference eludes an algorithm. I think 'language' and linearity, 'language' and logic may be incompatible, and part of my struggle is trying to comprehend this stuff as a language.",
      "Javascript and Error messages and testing scripts – these remain advanced Greek to me - a dogmatic and confusing series of words whose precision lays in ambush, beyond my ability. I think code is like Trump, just needling me with 'WRONG! WRONG!' without helping me to understand. The lack of collaboration, code’s esoteric quality and the vast, vast world of required background information, makes fluency still seem nearly impossible.",
      "./images/Semiotics.gif"
    ],

    "tags": ["Learning javascript", "beginner", "collaboration"],
    "alt": "Dr. Horrible saying 'the status is not quo'"
    },


  {
    "title": "Terseness May Be Beautiful" ,
    "date": {
      "month": "January",
      "day": "8",
      "year": 2017
    },
    "article": [
      "'The Community' of programmers is an amazingly generous tribe of folks. Online, the Flatiron School pays folks to help make the big system run (to write and improve curriculum, etc!) and those folks are kind and patient but I’m not talking about them. One must pay a prettier penny to get their help. Instead, I lucked into a fantastic mentor the other day, one of the legend of experienced coders who volunteer to reach back and help some of us try to climb out of total obscurity. Drew had helped me before and I DM’d him to ask if I was anywhere near the right path on the damn Tic Tac Toe mindboggle.",
      "At one point during the next 4 (FOUR!) hours of mentoring, of gently guiding me toward comprehending a way forward ('Change 2 words and you’ve got it' 'We have to account for the fact that we’re checking each combo, not one'...), Drew commented that I could clean up my code a little, and sent me a simplified syntax of what I had cobbled from my limited skill and his consistent guidance. I stared at what he’d written, my brain whining and losing momentum, underpowered up the hill he’d just conjured on a whim.",
      [" \"You think the solution is way more complex than it is sometimes. It’s simple simple.\" "],
      "Perhaps. I hope so.", "At another point, he said that programmers see terseness as beautiful. I understand what Drew means, and I want to eventually acquire the ability to be terse, and write beautiful code. Right now, I’m still staring at the next huge black monoliths that appear on every page, wondering WTF.",
      "./images/Terseness.gif",
      "I feel exhausted. I stare at my pastel and jagged Ruby code.", "After a few hours, when I look back, I can see that I am erratically pressing into an infinite darkness. And I very gratefully acknowledge I couldn’t have come this far without mentors - who can see in the dark."
    ],
    "tags": ["mentors", "beginner", "collaboration", "Ruby"]
  },

  {
    "title": "There Is Only One Thing More Painful Than Learning From Experience...",
    "date": {
      "month": "February",
      "day": "26",
      "year": 2017
      },
    "article":[["\"... and that is not learning from experience.\""],
    "Archibald McLeish",
    "I’ve been trying to teach myself coding for a while now, and the convention historically has been to major in Computer Science, then get a job. The new disrupter for IT aspirants is completing online schools, “bootcamps” or even becoming self-taught. I’ve tried each of these, and just started my ‘second’ bootcamp.",
    "See, this ain’t my first toe in the water. I started a fulltime “full-stack boot camp” last year. I’d done the prep work required and paid my hefty tuition and was excited to be educated, naively expecting to learn years of wisdom much the same way Neo learns jui-jitsu.",
    "Here was my experience of moving from “preparation” to the actual full-time course:",
    "./images/jaws.jpg",
    "Let’s summarize that I found the experience ... clarifying. I quit after 2 weeks, having assured myself that I was totally unprepared and therefore incapable of assimilating that intensity of foreign, complex and cumulative information uploads, each day, for another 10 weeks.",
    "Following that intense agitation, I’ve continued online courses and completed a laid-back “code camp” in September; it was gratifying, and the milieu and instruction was, primarily, designed to foster a dev community in a ski town. We met once a week for 3 months following an online WebDev course curriculum. It was, in every way, different than the bootcamp.",
    "So now I have 2 radically different pedagogies around coding but I do have one consistent insight:",


    [" \" ...The thing that I think is the most frustrating about programming is you battle with a concept or feature or tool for a long time, and while you are battling, it feels like you're never gonna get it." ,

    "And then you get it.",

    "And then it feels obvious.",

    "I feel like there’s a very small amount of time, maybe like 5 seconds, where you feel good about it. 90% of it is spent where you feel angry, and stupid. 9% is spent feeling like ‘oh. Obviously.’ ",
    "And there’s 1% of happiness...\" "],
    "Saron Yitbarek, founder of CodeNewbie.org"
  ],
    "tags": ["beginner", "bootcamp"]
  },

  {
    "title": "Coding?  Really?!",
    "date": {
      "month": "March",
      "day": "2",
      "year": 2017
      },
    "article":["At the granular level, how I came to Programming was my choice but that doesn’t mean I consciously directed my life to crescendo, at this moment, at this particular juncture. Instead, I just arrived here at the intersection of serendipity and inclination.",
    "After college+, I traveled and worked 6–12 month jobs overseas for a few years, before landing back in Florida, to help with Outward Bound’s adjudicated-youth program. I loved the Project Step program — solid(!) idealistic young do-gooders all — but the pittance, and 18 months of lightning storms and hurricanes, solid walls of mosquitos, less than 300’ of topography and 30-day canoe convoys paddling with 11 adjudicated boys and 2 other instructors down the tea-colored Suwanee, Withlacoochee, St. Johns and Georgia’s Altamaha… I grew burnt in the Sunshine State.",
    "./images/CodingReally.jpg",

    "So, identifying something that gave me fulfillment (struggling alongside troubled youth), plus promises of better financial compensation, I arrived in Utah (huh?!), and began my next 15 years of “wilderness therapy” (which is a wealthier kid’s version of Project STEP - though they honestly come with other hardships), instructing, field directing and finally marketing the program I helped build, but didn’t own. When the company unwound and my job as “company mascot” (Outreach Director) evaporated, I found myself anxiously adrift, and quickly committed to “retooling” for another long career!",
    "That’s why I decided to learn software development. To be totally honest, I actually fell for the garish parade of unscrupulous marketing that one 'can learn coding in 3 months' and 'make 6 figures starting out, maybe even with Google or Facebook!'' I’m relatively smart, and I like computers’ digital decisiveness; after 15 years living in the greys of therapeutic programs, I wanted the concrete black and white certainty of binary. Plus, the knowledge and confidence that jobs are waiting is enticing.",
    "It’s much harder than I thought.",
    "I like the collaboration of this program’s community. I’m old school enough to want the traditional back&forth of a lively topic rippling through a cohort and inspiring discourse. Learning the esoteric logic of code is terribly hard, and coding alone is still harder. It’s discouraging, and deflating, to not know how to look up to find answers because I don’t know exactly how I am stuck. That’s what stuck is! Paralysis. That’s where colleagues are so helpful to me. There are lots of folks in my boat, having the same confusions and feeling the same embarrassment and … feeling just as stupid and incapable at times. There are rare but satisfying times I can help them, too."
  ],
    "tags": ["Learning javascript", "coding", "beginner", "collaboration"]
  },

  {
    "title": "When One Teaches, Two Learn",
    "date": {
      "month": "March",
      "day": "3",
      "year": 2017
      },
    "article":[
      "To conclude our first week, we had two former student visitors today, to provide more visceral and authentic advice. By ‘more’ I mean, all the motivational maxims and inspiring quotations aside, there’s something far more digestible to me when the motivator is just a rung or two above 'peer' in my present struggle. I sense their admiration mixed with true empathy for what we’re undertaking. Drew and Kevin finished the last cohort, but — as Teddy Roosevelt extolled — they remember and admire the striving valiantly and erring, coming short 'again and again because there is no effort without error and shortcoming'.",
      "./images/teaching.jpg",
      "Here is some solid advice they passed along:",
      " * network effectively (instead of just getting accepted into senior programmers’ and recruiter’s LinkedIn accounts); take folks to lunch and find out about them as people, not just potential check-signers.",
      "* Expect to emerge into a local job culture a bit over-crowded with many other hungry 'junior developers'. Strategize how to leverage our life experience.",
      "* Never say ‘I don’t know’ to an interview question. That’s not inviting any kind of conversation. That’s a period - end of discussion.",
      "* My favorite advice, though, recalls Robert Heinlein’s dictum, which titles this blog entry. Drew and Kevin offered their cohort’s great lesson: 'help stragglers. It’s kind but more selfishly, they’ll return the favor when you are lost.'",
      "I’ve been looking for collaboration baked into a course’s teaching design. I think I’ve found it.  I hope so! Yesterday was our first time but 6 of us will perfect our mob-coding in a group project every Thursday for the next 2 months; we move seating 2x a week, to work alongside new folks. Friday has Iron Pints at 1:30, where everyone leaves their computers and gathers in a code-free zone, to socialize and imbibe, and be congenial.",
      "The IronYard offers an intense 12 week front-end engineering curriculum with what seem like a palpable intention for supporting us."
    ],
    "tags": [ "bootcamp", "Learning javascript", "collaboration", "mentors"]
  },

  {
    "title": "Javascript Bootcamp: Week 4",
    "date": {
      "month": "March",
      "day": "19",
      "year": 2017
      },
    "article":[
      "Here is a list of insights/recommendations from the first 3 weeks that I wish I had more time to write about:",
      "* Networking isn’t meeting someone just to get them to accept your LinkedIn request. It is actual human relating — finding out about the person’s interests and supporting them, if yours align.",
      "* During every workday’s 3 -6 hours of rapid-fire lecture concepts, somehow take comprehensive, human-readable, organized notes. And — pay attention to the nuance and distinctions of each new concept. Ugh. It’s very difficult to attend and understand — and transcribe anything readable later. I sure wish one of the brick & mortar schools would develop a different option than code school/bootcamps’ intense exposure concept.",
      "* Why are my cohort student’s default settings to work solo on projects?  I still don’t understand this. May be social anxiety?  Competence insecurity? I'm stumped.  Because immediately after getting my assignment, I instinctively want to team up, and talk out strategies and “big picture” perspectives.  It just seems to go against our grain.",
      "* Every Thursday, we work on our Iron Yard group project. We are assigned differing members weekly. I am really becoming quite cognizant of the concern businesses show toward assuring we applicants are not only competent but also a “good fit” for job placements. For example, writing actual code is not our biggest hurdle yet. Despite agreeing on one mutual “issue” and being given a clear SOP walking into our room, my group still struggles with respecting divergent concepts and interpersonal give & take.",
      "* And so, the importance of group dynamic is emerging as a significant component of the team’s potential.",
      "It is becoming visceral and obvious why interviews attempt to parse my influence on the existing dynamic in a development team."
    ],
    "tags": ["bootcamp", "Learning javascript", "beginner", "collaboration"]
  }
]
